[2025-10-09T17:29:36.128+0000] {taskinstance.py:1956} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: quality_assurance.finalize_qa_process manual__2025-10-09T17:27:26.513303+00:00 [queued]>
[2025-10-09T17:29:36.133+0000] {taskinstance.py:1956} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: quality_assurance.finalize_qa_process manual__2025-10-09T17:27:26.513303+00:00 [queued]>
[2025-10-09T17:29:36.134+0000] {taskinstance.py:2170} INFO - Starting attempt 1 of 2
[2025-10-09T17:29:36.141+0000] {taskinstance.py:2191} INFO - Executing <Task(PythonOperator): finalize_qa_process> on 2025-10-09 17:27:26.513303+00:00
[2025-10-09T17:29:36.147+0000] {standard_task_runner.py:60} INFO - Started process 1504 to run task
[2025-10-09T17:29:36.149+0000] {standard_task_runner.py:87} INFO - Running: ['***', 'tasks', 'run', 'quality_assurance', 'finalize_qa_process', 'manual__2025-10-09T17:27:26.513303+00:00', '--job-id', '1296', '--raw', '--subdir', 'DAGS_FOLDER/quality_assurance.py', '--cfg-path', '/tmp/tmpci1fy1pl']
[2025-10-09T17:29:36.151+0000] {standard_task_runner.py:88} INFO - Job 1296: Subtask finalize_qa_process
[2025-10-09T17:29:36.191+0000] {task_command.py:423} INFO - Running <TaskInstance: quality_assurance.finalize_qa_process manual__2025-10-09T17:27:26.513303+00:00 [running]> on host 55aa37341c5f
[2025-10-09T17:29:36.388+0000] {taskinstance.py:2480} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='pdf-converter' AIRFLOW_CTX_DAG_ID='quality_assurance' AIRFLOW_CTX_TASK_ID='finalize_qa_process' AIRFLOW_CTX_EXECUTION_DATE='2025-10-09T17:27:26.513303+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='manual__2025-10-09T17:27:26.513303+00:00'
[2025-10-09T17:29:36.409+0000] {quality_assurance.py:1515} INFO - 🎯 Полный 5-уровневый QA завершен: 95.8% - ✅ КАЧЕСТВО ПРОШЛО 5-УРОВНЕВУЮ ВАЛИДАЦИЮ
[2025-10-09T17:29:36.409+0000] {python.py:201} INFO - Done. Returned value was: {'qa_completed': True, 'enterprise_validation': True, 'quality_score': 95.80000000000001, 'quality_passed': True, 'final_document': '/app/output/en/1760029214_test_short.md', 'final_content': '# upload_1760029219_test_short\n\n## 命令列表\n\n| Command Name         | NetFn | CMD | Privilege | 备注                                      |  |\n|----------------------|-------|-----|-----------|-------------------------------------------|--|\n| chassis status       |       |     | User      | 获取当前服务器 (Server) 状态              |  |\n| chassis restart_cause|       |     | User      | 获取服务器 (Server) 系统上次重启原因      |  |\n| chassis selftest     |       |     | User      | 获取服务器 (Server) 系统自检结果          |  |\n| chassis policy always-on/previous/always-off |       |     | operator | 设置服务器 (Server) 系统电源 (Power Supply) 恢复策略为自动开机 / 恢复到断电前状态 / 保持关机状态 |  |\n| chassis bootdev {device} |       |     | operator | 设置服务器 (Server) 的启动项            |  |\n| power status         |       |     | User      | 获取服务器 (Server) 系统电源 (Power Supply) 当前状态 |  |\n| power on/up          |       |     | operator  | 设置服务器 (Server) 开机                  |  |\n| power off/down       |       |     | operator  | 设置服务器 (Server) 关机                  |  |\n| power reset          |       |     | operator  | 设置服务器 (Server) 重启                  |  |\n| mc info              |       |     | User      | 获取服务器 (Server) 管理系统各个模块信息  |  |\n| mc selftest          |       |     | User      | 获取服务器 (Server) 管理系统自检结果      |  |\n| mc reset cold        |       |     | Admin     | 设置服务器 (Server) 管理系统冷重启        |  |\n| sdr                 |       |     | User      | 获取服务器 (Server) 所有传感器的部分信息    |  |\n| sensor list          |       |     | User      | 获取服务器 (Server) 所有传感器的详细参数信息 |  |\n| sensor get {sensor-name} |       |     | User      | 获取服务器 (Server) 指定传感器的详细信息  |  |\n| sensor thresh {sensor-name} |       |     | Admin     | 设置服务器 (Server) 指定传感器的阈值    |  |\n| sel                 |       |     | User      | 获取系统日志信息                          |  |\n| sel elist           |       |     | User      | 获取系统详细日志记录                      |  |\n| fru                 |       |     | User      | 获取现场可替换单元信息                    |  |\n| session info active  |       |     | User      | 获取服务器 (Server) 管理系统当前活跃用户的会话信息 |  |\n| User list            |       |     | User      | 获取所有用户信息                          |  |\n| User set name {User id} {Username} |       |     | Admin     | 设置服务器 (Server) 管理系统新增用户名 |  |\n| User set password {User id} {password} |       |     | Admin     | 设置服务器 (Server) 管理系统指定用户的密码 |  |\n| User test {User id} {16 | 20} {password} |       |     | Admin     | 验证用户名密码的正确性                |  |\n| User disable {User id} |       |     | Admin     | 关闭指定用户的服务器 (Server) 管理系统的访问权限 |  |\n| User enable {User id} |       |     | Admin     | 开启指定用户的服务器 (Server) 管理系统的访问权限 |  |\n| User priv {User id} {privilege level} |       |     | Admin     | 设置指定用户的服务器 (Server) 管理系统访问权限 |  |\n\n## 用户管理命令\n\n### 用户信息管理\n\n| 命令 | 描述 | 权限 | 示例 |\n| --- | --- | --- | --- |\n| `User set name {User id} {Username}` | 设置服务器管理系统用户名 | Admin | 设置服务器管理系统新增用户名 |\n| `User set password {User id} {password}` | 设置指定用户的密码 | Admin | 设置服务器管理系统指定用户的密码 |\n| `User test {User id} {16 | 20} {password}` | 验证用户名和密码的正确性 | Admin | 验证用户名密码的正确性 |\n| `User disable {User id}` | 关闭指定用户的访问权限 | Admin | 关闭指定用户的服务器管理系统访问权限 |\n| `User enable {User id}` | 开启指定用户的访问权限 | Admin | 开启指定用户的服务器管理系统访问权限 |\n| `User priv {User id} {privilege level}` | 设置指定用户的访问权限级别 | Admin | 设置指定用户的服务器管理系统访问权限 |\n\n---\n\n## 系统自检命令\n\n### 获取服务器系统自检结果\n\n| 命令描述 | `chassis selftest` 命令用于获取服务器系统自检结果 |\n| --- | --- |\n| 权限 | user |\n| 示例 | `lenovo:~# ipmitool -H [BMC_IP] -U USERID -P PASSW0RD -I lanplus chassis selftest`<br>`Self Test Results : passed` |\n\n---\n\n## 电源恢复策略命令\n\n### 设置服务器系统电源恢复策略\n\n| 命令描述 | `chassis policy` 命令用于设置服务器系统电源恢复策略。支持以下三种策略：<br>1. `always-on`：服务器电源接通后系统会自动启动。<br>2. `previous`：服务器电源接通后系统恢复至断电前的状态。<br>3. `always-off`：服务器电源接通后系统保持关机状态。 |\n| --- | --- |\n| 权限 | operator |\n| 示例 | `lenovo:~# ipmitool -H [BMC_IP] -U USERID -P PASSW0RD -I lanplus chassis policy state <state>`<br>`list`：返回支持的电源恢复策略 |\n\n---\n\n## 其他说明\n\n- **术语一致性**：保留所有中文技术术语，如“问天 (WenTian)”、“联想问天 (Lenovo WenTian)”、“天擎 (ThinkSystem)”、“至强 (Xeon)”、“英特尔 (Intel)”等。\n- **格式优化**：调整表格结构，确保对齐和可读性。\n- **技术细节**：保留所有具体技术细节，如命令示例、权限级别、参数说明等。\n- **语言风格**：保持专业、清晰的技术文档风格，确保内容准确无误。\n\n chassis policy state <state>`  \n|  | `lenovo:~# ipmitool lanplus chassis policy state list` (返回支持的策略列表)  \n\n---\n\n## chassis bootdev {device} (设置服务器的一次性启动选项)\n\n| Command Description | `chassis bootdev` 命令用于设置服务器 (Server) 系统的一次性启动选项。  \n| --- | --- |  \n\n| Privilege | operator |  \n\n---\n\n## sol activate (激活 SOL 功能)\n\n| Command Description | `sol activate` 命令用于激活 Serial Over LAN (SOL) 功能。  \n| --- | --- |  \n\n| Privilege | administrator |  \n\n| Command Example |  \n```bash\nlenovo:~# ipmitool -H [BMC_IP] -U USERID -P PASSW0RD -I lanplus sol activate\nusesolkeepalive\n[SOL Session operational. Use ~? for help]\n```  \n\n---\n\n## sol deactivate (关闭 SOL 功能)\n\n| Command Description | `sol deactivate` 命令用于关闭 Serial Over LAN (SOL) 功能。  \n| --- | --- |  \n\n| Privilege | administrator |  \n\n| Command Example |  \n```bash\nlenovo:~# ipmitool -H [BMC_IP] -U USERID -P PASSW0RD -I lanplus sol deactivate\n```  \n\n---\n\n## Lenovo BMC 支持的 OEM RAW 命令\n\n以下命令是 Lenovo BMC 支持的 OEM RAW 命令。  \n（具体内容根据实际需求补充）\n\nMP Trap 信息 (`Get SNMP Trap Info`)\n\n#### 命令格式\n- **NetFN**: `0x30`\n- **命令码**: `0x02`\n\n#### 请求数据格式\n\n| **字段** | **字节** | **数据字段** |\n| --- | --- | --- |\n| **Request Data** | 1 | user ID (值范围：01h 到 05h) |\n| **Request Data** | 2 | 参数定义： <br> 01h - enable <br> 02h - severity <br> 03h - version <br> 04h - mode <br> 05h - community <br> 06h - user <br> 07h - user encrypt <br> 08h - password <br> 09h - pass encrypt <br> 0Ah - destination IP <br> 0Bh - port <br> 0Ch - lan channel <br> 0Dh - enter ID |\n\n#### 响应数据格式\n\n| **参数** | **字节** | **数据字段** |\n| --- | --- | --- |\n| **参数 01h** | 1 | 完成码 |\n| **参数 01h** | 2 | 00h - disable <br> 01h - enable |\n| **参数 02h** | 1 | 完成码 |\n| **参数 02h** | 2 | 严重性： <br> 01h - critical <br> 02h - critical and warning <br> 03h - all |\n| **参数 03h** | 1 | 完成码 |\n| **参数 03h** | 2 | 版本： <br> 01h - v1 <br> 02h - v2c <br> 03h - v3 |\n| **参数 04h** | 1 | 完成码 |\n| **参数 04h** | 2 | 模式 |\n| **参数 05h** | 1 | 完成码 |\n| **参数 05h** | 2:17 | 社区名 (community) |\n| **参数 06h** | 1 | 完成码 |\n| **参数 06h** | 2:17 | 用户名 (user) |\n| **参数 07h** | 1 | 完成码 |\n| **参数 07h** | 2 | 用户加密： <br> 00h - user encrypt <br> 01h - user non-encrypt |\n| **参数 08h** | 1 | 完成码 |\n| **参数 08h** | 2:17 | 密码 (password) |\n| **参数 09h** | 1 | 完成码 |\n| **参数 09h** | 2 | 密码加密： <br> 00h - password encrypt <br> 01h - password non-encrypt |\n| **参数 0Ah** | 1 | 完成码 |\n| **参数 0Ah** | 2:33 | 目标 IP (destination IP) |\n| **参数 0Bh** | 1 | 完成码 |\n| **参数 0Bh** | 2:3 | 端口 (port) |\n| **参数 0Ch** | 1 | 完成码 |\n| **参数 0Ch** | 2 | LAN 通道 (lan channel) |\n| **参数 0Dh** | 1 | 完成码 |\n| **参数 0Dh** | 2:33 | 进入 ID (enter ID) |\n\n#### 命令示例\n```bash\n# ipmitool -H 10.109.107.160 -U USERID -P PASSW0RD\n```\n\n```markdown\n## 代码示例\n\n| 参数 | 数据长度 | 数据字段 |\n| --- | --- | --- |\n| for parameter 0Ah | 2:33 | 目标 IP 地址 (destination IP) |\n| Response Data | 1 | 完成码 (Completion code) |\n| for parameter 0Bh | 2:3 | 端口号 (port) |\n| for parameter 0Ch | 2 | 网络通道 (lan channel) |\n| --- | --- | --- |\n| Response Data for parameter | 1 | 完成码 (Completion code) |\n| 0Dh | 2:33 | 入站 ID (enter ID) |\n\n### 命令示例\n```bash\n# ipmitool -H 10.109.107.160 -U USERID -P PASSW0RD\n```\n\n## 设置 SNMP Trap 信息 (Set SNMP Trap Info)\n\n| 操作 | 网络功能 (netfn) | 命令 (cmd) |\n| --- | --- | --- |\n| SET SNMPTRAPINFO | netfn=`0x30` | cmd=`0x03` |\n\n### 请求数据格式\n\n| 数据长度 | 字节 | 数据字段 |\n| --- | --- | --- |\n| Request Data | 1 | 用户 ID (user ID)，取值范围为 01h 到 05h。 |\n| Request Data | 2 | 参数定义：  \n  - 01h - 启用/禁用 (enable/disable)  \n  - 02h - 严重性 (severity)  \n  - 03h - 版本 (version)  \n  - 04h - 模式 (mode)  \n  - 05h - 社区字符串 (community)  \n  - 06h - 用户名 (user)  \n  - 07h - 用户加密 (user encrypt)  \n  - 08h - 密码 (password)  \n  - 09h - 密码加密 (pass encrypt)  \n  - 0Ah - 目标 IP 地址 (destination IP)  \n  - 0Bh - 端口号 (port)  \n  - 0Ch - 网络通道 (lan channel)  \n  - 0Dh - 入站 ID (enter ID) |\n| Request Data | 3 | 参数取值：  \n  - 对于参数 01h：  \n    - 00h - 禁用 (disable)  \n    - 01h - 启用 (enable)  \n  - 对于参数 02h：  \n    - 01h - 严重 (critical)  \n    - 02h - 严重和警告 (critical and warning)  \n    - 03h - 全部 (all)  \n  - 对于参数 03h： |\n```', 'qa_report': '/opt/***/temp/qa_comprehensive_report_qa_full_1760030848.json', 'issues_count': 4, 'corrections_applied': 0, 'pipeline_ready': True, '5_level_validation_complete': True, 'level_scores': {'level_1': 0.9900000000000001, 'level_2': 1.0, 'level_3': 0.95, 'level_4': 0.8500000000000001, 'level_5': 1.0}, 'pdf_comparison_performed': True, 'ocr_validation_performed': True, 'semantic_analysis_performed': True, 'auto_correction_performed': False}
[2025-10-09T17:29:36.431+0000] {taskinstance.py:1138} INFO - Marking task as SUCCESS. dag_id=quality_assurance, task_id=finalize_qa_process, execution_date=20251009T172726, start_date=20251009T172936, end_date=20251009T172936
[2025-10-09T17:29:36.481+0000] {local_task_job_runner.py:234} INFO - Task exited with return code 0
[2025-10-09T17:29:36.501+0000] {taskinstance.py:3280} INFO - 1 downstream tasks scheduled from follow-on schedule check
