[2025-10-08T13:41:29.513+0000] {taskinstance.py:1956} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: quality_assurance.generate_comprehensive_qa_report manual__2025-10-08T13:38:40.184318+00:00 [queued]>
[2025-10-08T13:41:29.519+0000] {taskinstance.py:1956} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: quality_assurance.generate_comprehensive_qa_report manual__2025-10-08T13:38:40.184318+00:00 [queued]>
[2025-10-08T13:41:29.519+0000] {taskinstance.py:2170} INFO - Starting attempt 1 of 2
[2025-10-08T13:41:29.527+0000] {taskinstance.py:2191} INFO - Executing <Task(PythonOperator): generate_comprehensive_qa_report> on 2025-10-08 13:38:40.184318+00:00
[2025-10-08T13:41:29.533+0000] {standard_task_runner.py:60} INFO - Started process 540 to run task
[2025-10-08T13:41:29.535+0000] {standard_task_runner.py:87} INFO - Running: ['***', 'tasks', 'run', 'quality_assurance', 'generate_comprehensive_qa_report', 'manual__2025-10-08T13:38:40.184318+00:00', '--job-id', '1029', '--raw', '--subdir', 'DAGS_FOLDER/quality_assurance.py', '--cfg-path', '/tmp/tmp_vtp8obo']
[2025-10-08T13:41:29.537+0000] {standard_task_runner.py:88} INFO - Job 1029: Subtask generate_comprehensive_qa_report
[2025-10-08T13:41:29.577+0000] {task_command.py:423} INFO - Running <TaskInstance: quality_assurance.generate_comprehensive_qa_report manual__2025-10-08T13:38:40.184318+00:00 [running]> on host 45f6d07b53bc
[2025-10-08T13:41:29.774+0000] {taskinstance.py:2480} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='pdf-converter' AIRFLOW_CTX_DAG_ID='quality_assurance' AIRFLOW_CTX_TASK_ID='generate_comprehensive_qa_report' AIRFLOW_CTX_EXECUTION_DATE='2025-10-08T13:38:40.184318+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='manual__2025-10-08T13:38:40.184318+00:00'
[2025-10-08T13:41:29.828+0000] {shared_utils.py:170} INFO - 📊 Метрики: {'dag_id': 'quality_assurance', 'task_id': 'generate_comprehensive_qa_report', 'processing_time_seconds': 0.05375313758850098, 'pages_processed': 0, 'file_size_mb': 0.0, 'success': True, 'timestamp': '2025-10-08T13:41:29.828814'}
[2025-10-08T13:41:29.829+0000] {quality_assurance.py:1217} INFO - 📊 Полный QA отчет создан: 89.3% - ✅ PASSED
[2025-10-08T13:41:29.829+0000] {python.py:201} INFO - Done. Returned value was: {'session_id': 'qa_full_1759930722', 'document_file': '/app/output/zh/1759930528_test_short.md', 'qa_completion_time': '2025-10-08T13:41:29.828212', 'overall_score': 89.3, 'quality_passed': True, 'enterprise_validation': True, 'level_results': {'level1_ocr_validation': {'level': 1, 'name': 'ocr_cross_validation', 'consensus_confidence': 0.9900000000000001, 'validation_score': 0.9900000000000001, 'engines_used': ['paddleocr', 'tesseract'], 'issues_found': [], 'processing_time': 0.01663684844970703, 'paddleocr_confidence': 0.9700000000000001, 'tesseract_confidence': 0.87}, 'level2_visual_comparison': {'level': 2, 'name': 'visual_comparison', 'overall_similarity': 0.0, 'ssim_score': 0.0, 'differences_count': 0, 'issues_found': ['Docker Pandoc service unavailable'], 'processing_time': 0.02461409568786621, 'pandoc_integration': True, 'validation_score': 0.7, 'skipped': True}, 'level3_ast_structure': {'level': 3, 'name': 'ast_structure_comparison', 'structural_similarity': 0.9999999999999999, 'semantic_similarity': 0.8, 'validation_score': 0.8999999999999999, 'issues_found': ['Low semantic similarity: 0.800'], 'processing_time': 0.01925373077392578}, 'level4_content_validation': {'level': 4, 'name': 'enhanced_content_validation', 'overall_score': 87.5, 'quality_passed': True, 'validation_score': 0.875, 'detailed_scores': {'structure': 1.0, 'content': 0.6, 'terms': 1.0, 'markdown': 1.0, 'translation': 1.0, 'formatting': 1.0, 'consistency': 1.0, 'completeness': 0.4}, 'issues_found': ['Пустые разделы: 4', 'Недостаточно основных секций: 0/4'], 'processing_time': 0.0192868709564209}, 'level5_auto_correction': {'level': 5, 'name': 'auto_correction', 'corrections_applied': 2, 'correction_confidence': 1.0, 'corrected_content': '# upload_1759930534_test_short\n\n## 命令列表\n\n| Command Name                                  | NetFN   | CMD   | Privilege   | 备注                                                                                     |\n|-----------------------------------------------|---------|-------|-------------|------------------------------------------------------------------------------------------|\n| chassis status                                |         |       | User        | 获取当前服务器 (Server) 状态                                                         |\n| chassis restart_cause                         |         |       | User        | 获取服务器 (Server) 系统上次重启原因                                                 |\n| chassis selftest                              |         |       | User        | 获取服务器 (Server) 系统自检结果                                                     |\n| chassis policy always-on/previous/always-off  |         |       | operator    | 设置服务器 (Server) 系统电源 (Power Supply) 恢复策略为自动开机 / 恢复到断电前状态 / 保持关机状态 |\n| chassis bootdev {device}                      |         |       | operator    | 设置服务器 (Server) 的启动项                                                         |\n| power status                                  |         |       | User        | 获取服务器 (Server) 系统电源 (Power Supply) 当前状态                                 |\n| power on/up                                   |         |       | operator    | 设置服务器 (Server) 开机                                                             |\n| power off/down                                |         |       | operator    | 设置服务器 (Server) 关机                                                             |\n| power reset                                   |         |       | operator    | 设置服务器 (Server) 重启                                                             |\n| mc info                                       |         |       | User        | 获取服务器 (Server) 管理系统各个模块信息                                             |\n| mc selftest                                   |         |       | User        | 获取服务器 (Server) 管理系统自检结果                                                 |\n| mc reset cold                                 |         |       | Admin       | 设置服务器 (Server) 管理系统冷重启                                                   |\n| sdr                                           |         |       | User        | 获取服务器 (Server) 所有传感器的部分信息                                             |\n| sensor list                                   |         |       | User        | 获取服务器 (Server) 所有传感器的详细参数信息                                         |\n| sensor get {sensor-name}                      |         |       | User        | 获取服务器 (Server) 指定传感器的详细信息                                             |\n| sensor thresh {sensor-name}                   |         |       | Admin       | 设置服务器 (Server) 指定传感器的阈值                                                 |\n| sel                                           |         |       | User        | 获取系统日志信息                                                                     |\n| sel elist                                     |         |       | User        | 获取系统详细日志记录                                                                 |\n| fru                                           |         |       | User        | 获取现场可替换单元信息                                                               |\n| session info active                           |         |       | User        | 获取服务器 (Server) 管理系统当前活跃用户的会话信息                                   |\n| User list                                     |         |       | User        | 获取所有用户信息                                                                     |\n| User set name {User id} {Username}            |         |       | Admin       | 设置服务器 (Server) 管理系统新增用户名                                               |\n| User set password {User id} {password}        |         |       | Admin       | 设置服务器 (Server) 管理系统指定用户的密码                                           |\n| User test {User id} {16|20} {password}        |         |       | Admin       | 验证用户名密码的正确性                                                               |\n| User disable {User id}                        |         |       | Admin       | 关闭指定用户的服务器 (Server) 管理系统的访问权限                                     |\n| User enable {User id}                         |         |       | Admin       | 开启指定用户的服务器 (Server) 管理系统的访问权限                                     |\n| User priv {User id} {privilege level}         |         |       | Admin       | 设置指定用户的服务器 (Server) 管理系统访问权限                                       |\n\n## 用户权限管理\n\n### 用户权限操作命令\n\n| **命令**               | **权限** | **描述**                                                                 |\n|------------------------|----------|--------------------------------------------------------------------------|\n| User disable {User id} | Admin    | 关闭指定用户的服务器 (Server)管理系统的访问权限                          |\n| User enable {User id}  | Admin    | 开启指定用户的服务器 (Server)管理系统的访问权限                          |\n| User priv {User id} {privilege level} | Admin    | 设置指定用户的服务器 (Server)管理系统访问权限                |\n\n---\n\n## chassis selftest（获取服务器 (Server)系统自检结果）\n\n### 命令描述\n\n`chassis selftest` 命令用于获取服务器 (Server) 系统的自检结果。\n\n| **属性**       | **说明**                                                                 |\n|----------------|--------------------------------------------------------------------------|\n| **权限**       | user                                                                     |\n| **命令示例**   | ```bash lenovo:~# ipmitool -H [BMC_IP] -U USERID -P PASSW0RD -I lanplus chassis selftest Self Test Results : passed ``` |\n\n---\n\n## chassis policy always-on/previous/always-off（设置服务器 (Server)系统电源 (Power Supply)恢复策略）\n\n### 命令描述\n\n`chassis policy` 命令用于设置服务器 (Server) 系统的电源 (Power Supply) 恢复策略。支持以下三种策略：\n\n1. **always-on**：当服务器 (Server) 电源 (Power Supply) 接通后，系统会自动启动。\n2. **previous**：当服务器 (Server) 电源 (Power Supply) 接通后，系统恢复至电源 (Power Supply) 拔出前的状态。\n3. **always-off**：当服务器 (Server) 电源 (Power Supply) 接通后，系统保持关机状态。\n\n| **属性**       | **说明**                                                                 |\n|----------------|--------------------------------------------------------------------------|\n| **权限**       | operator                                                                |\n| **命令示例**   | ```bash lenovo:~# ipmitool -H [BMC_IP] -U USERID -P PASSW0RD -I lanplus chassis policy state <state>: list : return supported policies ``` |\n\n---\n\n## chassis bootdev {device} （设置服务器 (Server) 的启动项）\n\n### 命令描述\n\n`chassis bootdev` 命令用于设置服务器 (Server) 系统的一次性启动选项。\n\n| **属性**       | **说明**                                                                 |\n|----------------|--------------------------------------------------------------------------|\n| **权限**       | operator                                                                |\n| **命令示例**   | ```bash lenovo:~# ipmitool -H [BMC_IP] -U USERID -P PASSW0RD -I lanplus chassis bootdev {device} ``` |\n\n---\n\n## sol activate （激活 SOL 功能）\n\n### 命令描述\n\n`sol activate` 命令用于激活 SOL（Serial Over LAN）功能。\n\n| **属性**       | **说明**                                                                 |\n|----------------|--------------------------------------------------------------------------|\n| **权限**       | administrator                                                           |\n| **命令示例**   | ```bash lenovo:~# ipmitool -H [BMC_IP] -U USERID -P PASSW0RD -I lanplus sol activate usesolkeepalive [SOL Session operational. Use ~? for help] ``` |\n\n---\n\n## Additional Command Example\n\n### 示例命令\n\n| **命令示例**       | ```bash lenovo:~# ipmitool -H [BMC_IP] -U USERID -P PASSW0RD -I lanplus chassis policy state <state>: list : return supported policies ``` |\n|--------------------|-----------------------------------------------------------------------------------------------------------------------------------------|\n\n---\n\n## SNMP Trap 配置命令\n\n### 参数说明\n\n#### 参数格式\n\n| Byte | Data Field                                                                 |\n|------|---------------------------------------------------------------------------|\n| 1    | User ID (范围：`01h` 到 `05h`)                                            |\n| 2    | Parameter (具体参数说明如下)                                              |\n\n#### Parameter Details\n\n| Parameter Value | Description                                                                 |\n|-----------------|-----------------------------------------------------------------------------|\n| `01h`           | 使能状态：`00h` - 禁用，`01h` - 启用                                     |\n| `02h`           | 严重性：`01h` - 严重，`02h` - 严重和警告，`03h` - 所有               |\n| `03h`           | 版本：`01h` - v1，`02h` - v2c，`03h` - v3                               |\n| `04h`           | 模式                                                                 |\n| `05h`           | 社区字符串（长度：17 字节）                                           |\n| `06h`           | 用户名（长度：17 字节）                                               |\n| `07h`           | 用户加密：`00h` - 加密，`01h` - 非加密                                 |\n| `08h`           | 密码（长度：17 字节）                                                 |\n| `09h`           | 密码加密：`00h` - 加密，`01h` - 非加密                                 |\n| `0Ah`           | 目标 IP 地址（长度：33 字节）                                         |\n| `0Bh`           | 端口号（长度：3 字节）                                                |\n| `0Ch`           | LAN 通道                                                              |\n| `0Dh`           | 进入 ID（长度：33 字节）                                             |\n\n### Response Data Format\n\n| Parameter Value | Byte | Data Field                                                                 |\n|-----------------|------|---------------------------------------------------------------------------|\n| `01h`           | 1    | 完成码 (`Completion Code`)                                              |\n|                 | 2    | 使能状态：`00h` - 禁用，`01h` - 启用                                     |\n| `02h`           | 1    | 完成码 (`Completion Code`)                                              |\n|                 | 2    | 严重性：`01h` - 严重，`02h` - 严重和警告，`03h` - 所有               |\n| `03h`           | 1    | 完成码 (`Completion Code`)                                              |\n|                 | 2    | 版本：`01h` - v1，`02h` - v2c，`03h` - v3                               |\n| `04h`           | 1    | 完成码 (`Completion Code`)                                              |\n|                 | 2    | 模式                                                                 |\n| `05h`           | 1    | 完成码 (`Completion Code`)                                              |\n|                 | 2:17 | 社区字符串                                                             |\n| `06h`           | 1    | 完成码 (`Completion Code`)                                              |\n|                 | 2:17 | 用户名                                                                 |\n| `07h`           | 1    | 完成码 (`Completion Code`)                                              |\n|                 | 2    | 用户加密：`00h` - 加密，`01h` - 非加密                                 |\n| `08h`           | 1    | 完成码 (`Completion Code`)                                              |\n|                 | 2:17 | 密码                                                                   |\n| `09h`           | 1    | 完成码 (`Completion Code`)                                              |\n|                 | 2    | 密码加密：`00h` - 加密，`01h` - 非加密                                 |\n| `0Ah`           | 1    | 完成码 (`Completion Code`)                                              |\n|                 | 2:33 | 目标 IP 地址                                                           |\n| `0Bh`           | 1    | 完成码 (`Completion Code`)                                              |\n|                 | 2:3  | 端口号                                                                 |\n| `0Ch`           | 1    | 完成码 (`Completion Code`)                                              |\n|                 | 2    | LAN 通道                                                               |\n| `0Dh`           | 1    | 完成码 (`Completion Code`)                                              |\n|                 | 2:33 | 进入 ID                                                               |\n\n### Command Example\n\n```bash\n# ipmitool -H 10.109.107.160 -U USERID -P PASSW0RD raw 0x30 0x02 01\n```\n\n### Notes\n\n- 请确保在执行命令时替换 `[BMC_IP]`、`USERID` 和 `PASSW0RD` 为实际的 BMC 地址、用户名和密码。\n- 参数值需根据具体需求进行设置，例如目标 IP 地址、端口号等。\n\n### 参数值示例\n\n| Parameter Code | Value | Description |\n|----------------|-------|-------------|\n| `01h`          | `00h` | Disable SNMP Trap |\n| `01h`          | `01h` | Enable SNMP Trap |\n| `02h`          | `01h` | Critical Severity |\n| `02h`          | `02h` | Critical and Warning Severity |\n| `02h`          | `03h` | All Severity Levels |\n\n### Notes:\n- 确保根据需求正确设置参数值。\n- `User ID` 必须在有效范围内 (`01h` 到 `05h`)。\n- 其他参数值（如 `03h` 版本和其他参数）可能需要根据系统配置进行指定。', 'validation_score': 1.0, 'issues_found': [], 'processing_time': 162.2121651172638}}, 'level_scores': {'level_1': 0.9900000000000001, 'level_2': 0.7, 'level_3': 0.8999999999999999, 'level_4': 0.875, 'level_5': 1.0}, 'all_issues': ['Docker Pandoc service unavailable', 'Low semantic similarity: 0.800', 'Пустые разделы: 4', 'Недостаточно основных секций: 0/4'], 'corrections_applied': 2, 'corrected_content': '# upload_1759930534_test_short\n\n## 命令列表\n\n| Command Name                                  | NetFN   | CMD   | Privilege   | 备注                                                                                     |\n|-----------------------------------------------|---------|-------|-------------|------------------------------------------------------------------------------------------|\n| chassis status                                |         |       | User        | 获取当前服务器 (Server) 状态                                                         |\n| chassis restart_cause                         |         |       | User        | 获取服务器 (Server) 系统上次重启原因                                                 |\n| chassis selftest                              |         |       | User        | 获取服务器 (Server) 系统自检结果                                                     |\n| chassis policy always-on/previous/always-off  |         |       | operator    | 设置服务器 (Server) 系统电源 (Power Supply) 恢复策略为自动开机 / 恢复到断电前状态 / 保持关机状态 |\n| chassis bootdev {device}                      |         |       | operator    | 设置服务器 (Server) 的启动项                                                         |\n| power status                                  |         |       | User        | 获取服务器 (Server) 系统电源 (Power Supply) 当前状态                                 |\n| power on/up                                   |         |       | operator    | 设置服务器 (Server) 开机                                                             |\n| power off/down                                |         |       | operator    | 设置服务器 (Server) 关机                                                             |\n| power reset                                   |         |       | operator    | 设置服务器 (Server) 重启                                                             |\n| mc info                                       |         |       | User        | 获取服务器 (Server) 管理系统各个模块信息                                             |\n| mc selftest                                   |         |       | User        | 获取服务器 (Server) 管理系统自检结果                                                 |\n| mc reset cold                                 |         |       | Admin       | 设置服务器 (Server) 管理系统冷重启                                                   |\n| sdr                                           |         |       | User        | 获取服务器 (Server) 所有传感器的部分信息                                             |\n| sensor list                                   |         |       | User        | 获取服务器 (Server) 所有传感器的详细参数信息                                         |\n| sensor get {sensor-name}                      |         |       | User        | 获取服务器 (Server) 指定传感器的详细信息                                             |\n| sensor thresh {sensor-name}                   |         |       | Admin       | 设置服务器 (Server) 指定传感器的阈值                                                 |\n| sel                                           |         |       | User        | 获取系统日志信息                                                                     |\n| sel elist                                     |         |       | User        | 获取系统详细日志记录                                                                 |\n| fru                                           |         |       | User        | 获取现场可替换单元信息                                                               |\n| session info active                           |         |       | User        | 获取服务器 (Server) 管理系统当前活跃用户的会话信息                                   |\n| User list                                     |         |       | User        | 获取所有用户信息                                                                     |\n| User set name {User id} {Username}            |         |       | Admin       | 设置服务器 (Server) 管理系统新增用户名                                               |\n| User set password {User id} {password}        |         |       | Admin       | 设置服务器 (Server) 管理系统指定用户的密码                                           |\n| User test {User id} {16|20} {password}        |         |       | Admin       | 验证用户名密码的正确性                                                               |\n| User disable {User id}                        |         |       | Admin       | 关闭指定用户的服务器 (Server) 管理系统的访问权限                                     |\n| User enable {User id}                         |         |       | Admin       | 开启指定用户的服务器 (Server) 管理系统的访问权限                                     |\n| User priv {User id} {privilege level}         |         |       | Admin       | 设置指定用户的服务器 (Server) 管理系统访问权限                                       |\n\n## 用户权限管理\n\n### 用户权限操作命令\n\n| **命令**               | **权限** | **描述**                                                                 |\n|------------------------|----------|--------------------------------------------------------------------------|\n| User disable {User id} | Admin    | 关闭指定用户的服务器 (Server)管理系统的访问权限                          |\n| User enable {User id}  | Admin    | 开启指定用户的服务器 (Server)管理系统的访问权限                          |\n| User priv {User id} {privilege level} | Admin    | 设置指定用户的服务器 (Server)管理系统访问权限                |\n\n---\n\n## chassis selftest（获取服务器 (Server)系统自检结果）\n\n### 命令描述\n\n`chassis selftest` 命令用于获取服务器 (Server) 系统的自检结果。\n\n| **属性**       | **说明**                                                                 |\n|----------------|--------------------------------------------------------------------------|\n| **权限**       | user                                                                     |\n| **命令示例**   | ```bash lenovo:~# ipmitool -H [BMC_IP] -U USERID -P PASSW0RD -I lanplus chassis selftest Self Test Results : passed ``` |\n\n---\n\n## chassis policy always-on/previous/always-off（设置服务器 (Server)系统电源 (Power Supply)恢复策略）\n\n### 命令描述\n\n`chassis policy` 命令用于设置服务器 (Server) 系统的电源 (Power Supply) 恢复策略。支持以下三种策略：\n\n1. **always-on**：当服务器 (Server) 电源 (Power Supply) 接通后，系统会自动启动。\n2. **previous**：当服务器 (Server) 电源 (Power Supply) 接通后，系统恢复至电源 (Power Supply) 拔出前的状态。\n3. **always-off**：当服务器 (Server) 电源 (Power Supply) 接通后，系统保持关机状态。\n\n| **属性**       | **说明**                                                                 |\n|----------------|--------------------------------------------------------------------------|\n| **权限**       | operator                                                                |\n| **命令示例**   | ```bash lenovo:~# ipmitool -H [BMC_IP] -U USERID -P PASSW0RD -I lanplus chassis policy state <state>: list : return supported policies ``` |\n\n---\n\n## chassis bootdev {device} （设置服务器 (Server) 的启动项）\n\n### 命令描述\n\n`chassis bootdev` 命令用于设置服务器 (Server) 系统的一次性启动选项。\n\n| **属性**       | **说明**                                                                 |\n|----------------|--------------------------------------------------------------------------|\n| **权限**       | operator                                                                |\n| **命令示例**   | ```bash lenovo:~# ipmitool -H [BMC_IP] -U USERID -P PASSW0RD -I lanplus chassis bootdev {device} ``` |\n\n---\n\n## sol activate （激活 SOL 功能）\n\n### 命令描述\n\n`sol activate` 命令用于激活 SOL（Serial Over LAN）功能。\n\n| **属性**       | **说明**                                                                 |\n|----------------|--------------------------------------------------------------------------|\n| **权限**       | administrator                                                           |\n| **命令示例**   | ```bash lenovo:~# ipmitool -H [BMC_IP] -U USERID -P PASSW0RD -I lanplus sol activate usesolkeepalive [SOL Session operational. Use ~? for help] ``` |\n\n---\n\n## Additional Command Example\n\n### 示例命令\n\n| **命令示例**       | ```bash lenovo:~# ipmitool -H [BMC_IP] -U USERID -P PASSW0RD -I lanplus chassis policy state <state>: list : return supported policies ``` |\n|--------------------|-----------------------------------------------------------------------------------------------------------------------------------------|\n\n---\n\n## SNMP Trap 配置命令\n\n### 参数说明\n\n#### 参数格式\n\n| Byte | Data Field                                                                 |\n|------|---------------------------------------------------------------------------|\n| 1    | User ID (范围：`01h` 到 `05h`)                                            |\n| 2    | Parameter (具体参数说明如下)                                              |\n\n#### Parameter Details\n\n| Parameter Value | Description                                                                 |\n|-----------------|-----------------------------------------------------------------------------|\n| `01h`           | 使能状态：`00h` - 禁用，`01h` - 启用                                     |\n| `02h`           | 严重性：`01h` - 严重，`02h` - 严重和警告，`03h` - 所有               |\n| `03h`           | 版本：`01h` - v1，`02h` - v2c，`03h` - v3                               |\n| `04h`           | 模式                                                                 |\n| `05h`           | 社区字符串（长度：17 字节）                                           |\n| `06h`           | 用户名（长度：17 字节）                                               |\n| `07h`           | 用户加密：`00h` - 加密，`01h` - 非加密                                 |\n| `08h`           | 密码（长度：17 字节）                                                 |\n| `09h`           | 密码加密：`00h` - 加密，`01h` - 非加密                                 |\n| `0Ah`           | 目标 IP 地址（长度：33 字节）                                         |\n| `0Bh`           | 端口号（长度：3 字节）                                                |\n| `0Ch`           | LAN 通道                                                              |\n| `0Dh`           | 进入 ID（长度：33 字节）                                             |\n\n### Response Data Format\n\n| Parameter Value | Byte | Data Field                                                                 |\n|-----------------|------|---------------------------------------------------------------------------|\n| `01h`           | 1    | 完成码 (`Completion Code`)                                              |\n|                 | 2    | 使能状态：`00h` - 禁用，`01h` - 启用                                     |\n| `02h`           | 1    | 完成码 (`Completion Code`)                                              |\n|                 | 2    | 严重性：`01h` - 严重，`02h` - 严重和警告，`03h` - 所有               |\n| `03h`           | 1    | 完成码 (`Completion Code`)                                              |\n|                 | 2    | 版本：`01h` - v1，`02h` - v2c，`03h` - v3                               |\n| `04h`           | 1    | 完成码 (`Completion Code`)                                              |\n|                 | 2    | 模式                                                                 |\n| `05h`           | 1    | 完成码 (`Completion Code`)                                              |\n|                 | 2:17 | 社区字符串                                                             |\n| `06h`           | 1    | 完成码 (`Completion Code`)                                              |\n|                 | 2:17 | 用户名                                                                 |\n| `07h`           | 1    | 完成码 (`Completion Code`)                                              |\n|                 | 2    | 用户加密：`00h` - 加密，`01h` - 非加密                                 |\n| `08h`           | 1    | 完成码 (`Completion Code`)                                              |\n|                 | 2:17 | 密码                                                                   |\n| `09h`           | 1    | 完成码 (`Completion Code`)                                              |\n|                 | 2    | 密码加密：`00h` - 加密，`01h` - 非加密                                 |\n| `0Ah`           | 1    | 完成码 (`Completion Code`)                                              |\n|                 | 2:33 | 目标 IP 地址                                                           |\n| `0Bh`           | 1    | 完成码 (`Completion Code`)                                              |\n|                 | 2:3  | 端口号                                                                 |\n| `0Ch`           | 1    | 完成码 (`Completion Code`)                                              |\n|                 | 2    | LAN 通道                                                               |\n| `0Dh`           | 1    | 完成码 (`Completion Code`)                                              |\n|                 | 2:33 | 进入 ID                                                               |\n\n### Command Example\n\n```bash\n# ipmitool -H 10.109.107.160 -U USERID -P PASSW0RD raw 0x30 0x02 01\n```\n\n### Notes\n\n- 请确保在执行命令时替换 `[BMC_IP]`、`USERID` 和 `PASSW0RD` 为实际的 BMC 地址、用户名和密码。\n- 参数值需根据具体需求进行设置，例如目标 IP 地址、端口号等。\n\n### 参数值示例\n\n| Parameter Code | Value | Description |\n|----------------|-------|-------------|\n| `01h`          | `00h` | Disable SNMP Trap |\n| `01h`          | `01h` | Enable SNMP Trap |\n| `02h`          | `01h` | Critical Severity |\n| `02h`          | `02h` | Critical and Warning Severity |\n| `02h`          | `03h` | All Severity Levels |\n\n### Notes:\n- 确保根据需求正确设置参数值。\n- `User ID` 必须在有效范围内 (`01h` 到 `05h`)。\n- 其他参数值（如 `03h` 版本和其他参数）可能需要根据系统配置进行指定。', 'qa_rules_used': {'min_content_length': 100, 'min_headings': 1, 'max_chinese_chars_ratio': 0.3, 'require_title': True, 'check_table_structure': True, 'validate_markdown_syntax': True, 'technical_terms_check': True, 'preserve_brand_names': True, 'min_quality_score': 80.0, 'excellent_quality_score': 95.0, 'OCR_CONFIDENCE_THRESHOLD': 0.8, 'VISUAL_SIMILARITY_THRESHOLD': 0.95, 'AST_SIMILARITY_THRESHOLD': 0.9, 'SEMANTIC_SIMILARITY_THRESHOLD': 0.85, 'OVERALL_QA_THRESHOLD': 0.85, 'MAX_CORRECTIONS_PER_DOCUMENT': 10, 'AUTO_CORRECTION_CONFIDENCE': 0.7}, 'level_configs_used': {'level1_ocr': {'consensus_threshold': 0.85, 'similarity_threshold': 0.8, 'engines': ['paddleocr', 'tesseract']}, 'level2_visual': {'ssim_threshold': 0.95, 'difference_tolerance': 0.1, 'page_comparison_mode': 'structural', 'pandoc_integration': True}, 'level3_ast': {'structural_similarity_threshold': 0.9, 'semantic_similarity_threshold': 0.85, 'model_name': 'sentence-transformers/all-MiniLM-L6-v2'}, 'level4_content': {'min_technical_terms': 5, 'min_code_blocks': 1, 'formatting_score_threshold': 0.8}, 'level5_correction': {'vllm_endpoint': 'http://vllm:8000/v1/chat/completions', 'correction_model': 'Qwen/Qwen2.5-VL-32B-Instruct', 'max_retries': 3, 'enable_auto_correction': True}}, 'report_file': '/opt/***/temp/qa_comprehensive_report_qa_full_1759930722.json'}
[2025-10-08T13:41:29.851+0000] {taskinstance.py:1138} INFO - Marking task as SUCCESS. dag_id=quality_assurance, task_id=generate_comprehensive_qa_report, execution_date=20251008T133840, start_date=20251008T134129, end_date=20251008T134129
[2025-10-08T13:41:29.867+0000] {local_task_job_runner.py:234} INFO - Task exited with return code 0
[2025-10-08T13:41:29.888+0000] {taskinstance.py:3280} INFO - 1 downstream tasks scheduled from follow-on schedule check
