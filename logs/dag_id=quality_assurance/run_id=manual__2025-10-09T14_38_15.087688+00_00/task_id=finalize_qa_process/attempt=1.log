[2025-10-09T14:40:24.175+0000] {taskinstance.py:1956} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: quality_assurance.finalize_qa_process manual__2025-10-09T14:38:15.087688+00:00 [queued]>
[2025-10-09T14:40:24.181+0000] {taskinstance.py:1956} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: quality_assurance.finalize_qa_process manual__2025-10-09T14:38:15.087688+00:00 [queued]>
[2025-10-09T14:40:24.181+0000] {taskinstance.py:2170} INFO - Starting attempt 1 of 2
[2025-10-09T14:40:24.189+0000] {taskinstance.py:2191} INFO - Executing <Task(PythonOperator): finalize_qa_process> on 2025-10-09 14:38:15.087688+00:00
[2025-10-09T14:40:24.195+0000] {standard_task_runner.py:60} INFO - Started process 1458 to run task
[2025-10-09T14:40:24.198+0000] {standard_task_runner.py:87} INFO - Running: ['***', 'tasks', 'run', 'quality_assurance', 'finalize_qa_process', 'manual__2025-10-09T14:38:15.087688+00:00', '--job-id', '1225', '--raw', '--subdir', 'DAGS_FOLDER/quality_assurance.py', '--cfg-path', '/tmp/tmpahgp1une']
[2025-10-09T14:40:24.200+0000] {standard_task_runner.py:88} INFO - Job 1225: Subtask finalize_qa_process
[2025-10-09T14:40:24.241+0000] {task_command.py:423} INFO - Running <TaskInstance: quality_assurance.finalize_qa_process manual__2025-10-09T14:38:15.087688+00:00 [running]> on host 9554f3e82501
[2025-10-09T14:40:24.443+0000] {taskinstance.py:2480} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='pdf-converter' AIRFLOW_CTX_DAG_ID='quality_assurance' AIRFLOW_CTX_TASK_ID='finalize_qa_process' AIRFLOW_CTX_EXECUTION_DATE='2025-10-09T14:38:15.087688+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='manual__2025-10-09T14:38:15.087688+00:00'
[2025-10-09T14:40:24.464+0000] {quality_assurance.py:1515} INFO - 🎯 Полный 5-уровневый QA завершен: 92.3% - ✅ КАЧЕСТВО ПРОШЛО 5-УРОВНЕВУЮ ВАЛИДАЦИЮ
[2025-10-09T14:40:24.464+0000] {python.py:201} INFO - Done. Returned value was: {'qa_completed': True, 'enterprise_validation': True, 'quality_score': 92.30000000000001, 'quality_passed': True, 'final_document': '/app/output/zh/1760020533_test_short.md', 'final_content': '# upload_1760020539_test_short\n\n## 命令列表\n\n| Command Name          | NetFn | CMD | Privilege | 备注                                   |  |\n|-----------------------|-------|-----|-----------|----------------------------------------|---|\n| chassis status        |       |     | User      | 获取当前服务器 (Server) 状态           |   |\n| chassis restart_cause |       |     | User      | 获取服务器 (Server) 系统上次重启原因   |   |\n| chassis selftest      |       |     | User      | 获取服务器 (Server) 系统自检结果       |   |\n| chassis policy always-on/previous/always-off |       |     | operator | 设置服务器 (Server) 系统电源 (Power Supply) 恢复策略为自动开机 / 恢复到断电前状态 / 保持关机状态 |   |\n| chassis bootdev {device} |       |     | operator | 设置服务器 (Server) 的启动项           |   |\n| power status          |       |     | User      | 获取服务器 (Server) 系统电源 (Power Supply) 当前状态 |   |\n| power on/up           |       |     | operator  | 设置服务器 (Server) 开机               |   |\n| power off/down        |       |     | operator  | 设置服务器 (Server) 关机               |   |\n| power reset           |       |     | operator  | 设置服务器 (Server) 重启               |   |\n| mc info               |       |     | User      | 获取服务器 (Server) 管理系统各个模块信息 |   |\n| mc selftest           |       |     | User      | 获取服务器 (Server) 管理系统自检结果   |   |\n| mc reset cold         |       |     | Admin     | 设置服务器 (Server) 管理系统冷重启     |   |\n| sdr                  |       |     | User      | 获取服务器 (Server) 所有传感器的部分信息 |   |\n| sensor list           |       |     | User      | 获取服务器 (Server) 所有传感器的详细参数信息 |   |\n| sensor get {sensor-name} |       |     | User      | 获取服务器 (Server) 指定传感器的详细信息 |   |\n| sensor thresh {sensor-name} |       |     | Admin     | 设置服务器 (Server) 指定传感器的阈值   |   |\n| sel                  |       |     | User      | 获取系统日志信息                       |   |\n| sel elist            |       |     | User      | 获取系统详细日志记录                   |   |\n| fru                  |       |     | User      | 获取现场可替换单元信息                 |   |\n| session info active   |       |     | User      | 获取服务器 (Server) 管理系统当前活跃用户的会话信息 |   |\n| User list             |       |     | User      | 获取所有用户信息                       |   |\n| User set name {User id} {Username} |       |     | Admin     | 设置服务器 (Server) 管理系统新增用户名   |   |\n| User set password {User id} {password} |       |     | Admin     | 设置服务器 (Server) 管理系统指定用户的密码 |   |\n| User test {User id} {16 | 20} {password} |       |     | Admin     | 验证用户名密码的正确性               |   |\n| User disable {User id} |       |     | Admin     | 关闭指定用户的服务器 (Server) 管理系统的访问权限 |   |\n| User enable {User id} |       |     | Admin     | 开启指定用户的服务器 (Server) 管理系统的访问权限 |   |\n| User priv {User id} {privilege level} |       |     | Admin     | 设置指定用户的服务器 (Server) 管理系统访问权限 |   |\n\n## 用户管理命令\n\n### 用户信息管理\n\n| **命令** | **参数** | **权限** | **描述** |\n| --- | --- | --- | --- |\n| `User set name` | `{User id} {Username}` | Admin | 设置服务器 (Server) 管理系统新增用户名 |\n| `User set password` | `{User id} {password}` | Admin | 设置服务器 (Server) 管理系统指定用户的密码 |\n| `User test` | `{User id} {16 | 20} {password}` | Admin | 验证用户名密码的正确性 |\n| `User disable` | `{User id}` | Admin | 关闭指定用户的服务器 (Server) 管理系统的访问权限 |\n| `User enable` | `{User id}` | Admin | 开启指定用户的服务器 (Server) 管理系统的访问权限 |\n| `User priv` | `{User id} {privilege level}` | Admin | 设置指定用户的服务器 (Server) 管理系统访问权限 |\n\n---\n\n## 系统自检结果查询\n\n### `chassis selftest`（获取服务器 (Server) 系统自检结果）\n\n| **命令描述** | `chassis selftest` 命令用来获取服务器 (Server) 系统自检结果 |\n| --- | --- |\n| **权限** | user |\n| **命令示例** | ```bash lenovo:~# ipmitool -H [BMC_IP] -U USERID -P PASSW0RD -I lanplus chassis selftest Self Test Results : passed ``` |\n\n---\n\n## 电源恢复策略设置\n\n### `chassis policy always-on/previous/always-off`（设置服务器 (Server) 系统电源 (Power Supply) 恢复策略为自动开机 / 恢复到断电前状态 / 保持关机状态）\n\n| **命令描述** | `chassis policy` 命令用来设置服务器 (Server) 系统电源 (Power Supply) 恢复策略。支持三种策略：<br>1. `always-on`：当服务器 (Server) 电源 (Power Supply) 接通后系统会自动启动。<br>2. `previous`：当服务器 (Server) 电源 (Power Supply) 接通后系统恢复电源 (Power Supply) 拔出前的状态。<br>3. `always-off`：当服务器 (Server) 电源 (Power Supply) 接通后系统保持关机状态。 |\n| --- | --- |\n| **权限** | operator |\n| **命令示例** | ```bash lenovo:~# ipmitool -H [BMC_IP] -U USERID -P PASSW0RD -I lanplus chassis policy state <state>: list : return supported policies ``` |\n\n## chassis policy <state> (设置服务器电源恢复策略)\n\n| Command Description | chassis policy 命令用于设置服务器 (Server) 系统电源 (Power Supply) 恢复策略。支持三种策略：  \n| 1. **always-on**：当服务器 (Server) 电源 (Power Supply) 接通后，系统会自动启动。  \n| 2. **previous**：当服务器 (Server) 电源 (Power Supply) 接通后，系统恢复至电源 (Power Supply) 拔出前的状态。  \n| 3. **always-off**：当服务器 (Server) 电源 (Power Supply) 接通后，系统保持关机状态。 |\n\n| --- | --- |\n\n| Privilege | operator |\n\n| Command example | -H [BMC_IP] -U USERID -P PASSW0RD -I lanplus  \n| lenovo:~# ipmitool lanplus chassis policy state <state>  \n| list : return supported policies |\n\n---\n\n## chassis bootdev {device} (设置服务器的一次性启动选项)\n\n| Command Description | chassis bootdev 命令用于设置服务器 (Server) 系统的一次性启动选项。 |\n\n| --- | --- |\n\n| Privilege | operator |\n\n---\n\n## sol activate (激活 SOL 功能)\n\n| Command Description | sol activate 命令用于激活 Serial Over LAN (SOL) 功能。 |\n\n| --- | --- |\n\n| Privilege | administrator |\n\n| Command example | lenovo:~# ipmitool -H [BMC_IP] -U USERID -P PASSW0RD -I lanplus sol activate  \n| usesolkeepalive  \n| [SOL Session operational. Use ~? for help] |\n\n---\n\n## sol deactivate (关闭 SOL 功能)\n\n| Command Description | sol deactivate 命令用于关闭 Serial Over LAN (SOL) 功能。 |\n\n| --- | --- |\n\n| Privilege | administrator |\n\n| Command example | lenovo:~# ipmitool -H [BMC_IP] -U USERID -P PASSW0RD -I lanplus sol deactivate |\n\n---\n\n## Lenovo BMC 支持的 OEM RAW 命令\n\n下列命令是 Lenovo BMC 支持的 OEM RAW 命令。\n\nilege** | administrator |\n| **Command Example** | `lenovo:~# ipmitool -H [BMC_IP] -U USERID -P PASSW0RD -I lanplus sol deactivate` |\n\n## Lenovo BMC OEM RAW Commands\n\nThe following commands are supported by Lenovo BMC as OEM RAW commands.\n\n## Get SNMP Trap Info (`netfn=0x30`, `cmd=0x02`)\n\n| **Get SNMP Trap Info** | **netfn=0x30**, **cmd=0x02** |\n| --- | --- |\n| **Request Data** |  |\n| **Byte** | **Data Field** |\n| **1** | user ID (value ranges from `01h` to `05h`) |\n| **2** | parameter (`01h` - enable, `02h` - severity, `03h` - version, `04h` - mode, `05h` - community, `06h` - user, `07h` - user encrypt, `08h` - password, `09h` - pass encrypt, `0Ah` - destination IP, `0Bh` - port, `0Ch` - lan channel, `0Dh` - enter ID) |\n| **Response Data** |  |\n| **For parameter `01h`** |  |\n| **1** | Completion code |\n| **2** | `00h` - disable, `01h` - enable |\n| **For parameter `02h`** |  |\n| **1** | Completion code |\n| **2** | severity (`01h` - critical, `02h` - critical and warning, `03h` - all) |\n| **For parameter `03h`** |  |\n| **1** | Completion code |\n| **2** | version (`01h` - v1, `02h` - v2c, `03h` - v3) |\n| **For parameter `04h`** |  |\n| **1** | Completion code |\n| **2** | mode |\n| **For parameter `05h`** |  |\n| **1** | Completion code |\n| **2:17** | community |\n| **For parameter `06h`** |  |\n| **1** | Completion code |\n| **2:17** | user |\n| **For parameter `07h`** |  |\n| **1** | Completion code |\n| **2** | user encrypt (`00h` - user encrypt, `01h` - user non-encrypt) |\n| **For parameter `08h`** |  |\n| **1** | Completion code |\n| **2:17** | password |\n| **For parameter `09h`** |  |\n| **1** | Completion code |\n| **2** | password encrypt (`00h` - password encrypt, `01h` - password non-encrypt) |\n| **For parameter `0Ah`** |  |\n| **1** | Completion code |\n| **2:33** | destination IP |\n| **For parameter `0Bh`** |  |\n| **1** | Completion code |\n| **2:3** | port |\n| **For parameter `0Ch`** |  |\n| **1** | Completion code |\n| **2** | lan channel |\n| **For parameter `0Dh`** |  |\n| **1** | Completion code |\n| **2:33** | enter ID |\n\n## Command Example\n\n```bash\n# ipmitool -H 10.109.107.160 -U USERID -P PASSW0RD\n```\n\n```markdown\n## 企业服务器硬件技术文档（第5部分）\n\n### 命令参数与响应数据\n\n#### 参数与响应数据映射\n\n| **参数** | **长度** | **描述** |\n| --- | --- | --- |\n| for parameter 0Ah | 2:33 | 目标 IP 地址 (destination IP) |\n| Response Data | 1 | 完成码 (Completion code) |\n| for parameter 0Bh | 2:3 | 端口号 (port) |\n| for parameter 0Ch | 2 | 网络通道 (lan channel) |\n| --- | --- | --- |\n| Response Data for parameter | 1 | 完成码 (Completion code) |\n| 0Dh | 2:33 | 进入 ID (enter ID) |\n\n#### 命令示例\n\n```bash\n# ipmitool -H `10.109.107.160` -U USERID -P PASSW0RD\n```\n\n### 设置 SNMP Trap 信息 (Set SNMP Trap Info)\n\n#### SNMP Trap 信息设置命令\n\n| **命令** | **参数** | **描述** |\n| --- | --- | --- |\n| SET SNMPTRAPINFO (netfn=`0x30`, cmd=`0x03`) | SET SNMPTRAPINFO (netfn=`0x30`, cmd=`0x03`) | 设置 SNMP Trap 信息 |\n\n#### 请求数据字段\n\n| **字段** | **字节数** | **数据字段** |\n| --- | --- | --- |\n| Request Data | 1 | 用户 ID (user ID)，取值范围为 01h 到 05h。 |\n| Request Data | 2 | 参数定义： <br> 01h - 启用 (enable) <br> 02h - 严重性 (severity) <br> 03h - 版本 (version) <br> 04h - 模式 (mode) <br> 05h - 社区名 (community) <br> 06h - 用户 (user) <br> 07h - 用户加密 (user encrypt) <br> 08h - 密码 (password) <br> 09h - 密码加密 (pass encrypt) <br> 0Ah - 目标 IP 地址 (destination IP) <br> 0Bh - 端口号 (port) <br> 0Ch - 网络通道 (lan channel) <br> 0Dh - 进入 ID (enter ID) |\n| Request Data | 3 | 参数值定义： <br> - 对于参数 01h： <br>   00h - 禁用 (disable) <br>   01h - 启用 (enable) <br> - 对于参数 02h： <br>   01h - 严重 (critical) <br>   02h - 严重和警告 (critical and warning) <br>   03h - 全部 (all) <br> - 对于参数 03h： |\n```', 'qa_report': '/opt/***/temp/qa_comprehensive_report_qa_full_1760020696.json', 'issues_count': 6, 'corrections_applied': 0, 'pipeline_ready': True, '5_level_validation_complete': True, 'level_scores': {'level_1': 0.9900000000000001, 'level_2': 1.0, 'level_3': 0.8, 'level_4': 0.825, 'level_5': 1.0}, 'pdf_comparison_performed': True, 'ocr_validation_performed': True, 'semantic_analysis_performed': True, 'auto_correction_performed': False}
[2025-10-09T14:40:24.484+0000] {taskinstance.py:1138} INFO - Marking task as SUCCESS. dag_id=quality_assurance, task_id=finalize_qa_process, execution_date=20251009T143815, start_date=20251009T144024, end_date=20251009T144024
[2025-10-09T14:40:24.529+0000] {local_task_job_runner.py:234} INFO - Task exited with return code 0
[2025-10-09T14:40:24.548+0000] {taskinstance.py:3280} INFO - 1 downstream tasks scheduled from follow-on schedule check
