[2025-10-15T17:19:18.132+0000] {taskinstance.py:1956} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: content_transformation.finalize_transformation_results manual__2025-10-15T17:18:42.997776+00:00 [queued]>
[2025-10-15T17:19:18.138+0000] {taskinstance.py:1956} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: content_transformation.finalize_transformation_results manual__2025-10-15T17:18:42.997776+00:00 [queued]>
[2025-10-15T17:19:18.138+0000] {taskinstance.py:2170} INFO - Starting attempt 1 of 3
[2025-10-15T17:19:18.146+0000] {taskinstance.py:2191} INFO - Executing <Task(PythonOperator): finalize_transformation_results> on 2025-10-15 17:18:42.997776+00:00
[2025-10-15T17:19:18.152+0000] {standard_task_runner.py:60} INFO - Started process 343 to run task
[2025-10-15T17:19:18.154+0000] {standard_task_runner.py:87} INFO - Running: ['***', 'tasks', 'run', 'content_transformation', 'finalize_transformation_results', 'manual__2025-10-15T17:18:42.997776+00:00', '--job-id', '1597', '--raw', '--subdir', 'DAGS_FOLDER/content_transformation.py', '--cfg-path', '/tmp/tmpe58qg1vd']
[2025-10-15T17:19:18.155+0000] {standard_task_runner.py:88} INFO - Job 1597: Subtask finalize_transformation_results
[2025-10-15T17:19:18.199+0000] {task_command.py:423} INFO - Running <TaskInstance: content_transformation.finalize_transformation_results manual__2025-10-15T17:18:42.997776+00:00 [running]> on host ee1be49cded6
[2025-10-15T17:19:18.266+0000] {taskinstance.py:2480} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='pdf-converter' AIRFLOW_CTX_DAG_ID='content_transformation' AIRFLOW_CTX_TASK_ID='finalize_transformation_results' AIRFLOW_CTX_EXECUTION_DATE='2025-10-15T17:18:42.997776+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='manual__2025-10-15T17:18:42.997776+00:00'
[2025-10-15T17:19:18.304+0000] {shared_utils.py:213} INFO - 📊 Метрики: {'dag_id': 'content_transformation', 'task_id': 'finalize_transformation_results', 'processing_time_seconds': 0.03726553916931152, 'pages_processed': 0, 'file_size_mb': 0.0, 'success': True, 'timestamp': '2025-10-15T17:19:18.304564'}
[2025-10-15T17:19:18.304+0000] {content_transformation.py:1437} INFO - 🎯 Трансформация финализирована: итоговое качество 95.5%
[2025-10-15T17:19:18.305+0000] {python.py:201} INFO - Done. Returned value was: {'session_id': 'transform_1760548724', 'transformation_completed': True, 'final_content': '# 命令列表\n\n| 命令名称 | NetFn | CMD | 权限级别 | 备注 |\n|---------|------|-----|----------|------|\n| `chassis status` | - | - | User | 获取当前服务器 (Server) 状态 |\n| `chassis restart_cause` | - | - | User | 获取服务器 (Server) 系统上次重启原因 |\n| `chassis selftest` | - | - | User | 获取服务器 (Server) 系统自检结果 |\n| `chassis policy always-on/previous/always-off` | - | - | Operator | 设置服务器 (Server) 系统电源 (Power Supply) 恢复策略为：自动开机 / 恢复至断电前状态 / 保持关机状态 |\n| `chassis bootdev {device}` | - | - | Operator | 设置服务器 (Server) 的启动设备 |\n| `power status` | - | - | User | 获取服务器 (Server) 系统电源 (Power Supply) 当前状态 |\n| `power on/up` | - | - | Operator | 设置服务器 (Server) 开机 |\n| `power off/down` | - | - | Operator | 设置服务器 (Server) 关机 |\n| `power reset` | - | - | Operator | 设置服务器 (Server) 重启 |\n| `mc info` | - | - | User | 获取服务器 (Server) 管理系统各模块信息 |\n| `mc selftest` | - | - | User | 获取服务器 (Server) 管理系统自检结果 |\n| `mc reset cold` | - | - | Admin | 设置服务器 (Server) 管理系统冷重启 |\n| `sdr` | - | - | User | 获取服务器 (Server) 所有传感器的部分信息 |\n| `sensor list` | - | - | User | 获取服务器 (Server) 所有传感器的详细参数信息 |\n| `sensor get {sensor-name}` | - | - | User | 获取服务器 (Server) 指定传感器的详细信息 |\n| `sensor thresh {sensor-name}` | - | - | Admin | 设置服务器 (Server) 指定传感器的阈值 |\n| `sel` | - | - | User | 获取系统事件日志 (SEL) 信息 |\n| `sel elist` | - | - | User | 获取系统详细日志记录 |\n| `fru` | - | - | User | 获取现场可替换单元 (FRU) 信息 |\n| `session info active` | - | - | User | 获取服务器 (Server) 管理系统当前活跃用户的会话信息 |\n| `user list` | - | - | User | 获取所有用户信息 |\n| `user set name {User id} {Username}` | - | - | Admin | 设置服务器 (Server) 管理系统新增用户名 |\n| `user set password {User id} {password}` | - | - | Admin | 设置服务器 (Server) 管理系统指定用户的密码 |\n| `user test {User id} {16|20} {password}` | - | - | Admin | 验证用户名与密码的正确性（支持16位或20位密码） |\n| `user disable {User id}` | - | - | Admin | 禁用指定用户的服务器 (Server) 管理系统访问权限 |\n| `user enable {User id}` | - | - | Admin | 启用指定用户的服务器 (Server) 管理系统访问权限 |\n| `user priv {User id} {privilege level}` | - | - | Admin | 设置指定用户的服务器 (Server) 管理系统访问权限等级 |\n\n> **说明**：  \n> - 所有命令均适用于 **联想问天 (Lenovo WenTian)** 系列服务器，兼容 **天擎 (ThinkSystem)** 平台。  \n> - 支持 **英特尔 (Intel)** 至强 (Xeon) 处理器平台，适用于企业级数据中心部署。  \n> - 权限级别定义：  \n>   - `User`：普通用户权限，仅可查看信息。  \n>   - `Operator`：操作员权限，可执行设备控制命令。  \n>   - `Admin`：管理员权限，可配置系统参数及用户管理。\n\n# 服务器 (Server) 管理系统用户与电源策略配置\n\n## 用户管理命令\n\n| 命令 | 参数说明 | 作用 | 权限级别 | 说明 |\n|------|----------|------|----------|------|\n| `User set name {User id} {Username}` | `{User id}`：用户ID（1-15）<br>`{Username}`：用户名（1-16字符） | 设置服务器 (Server)管理系统新增用户名 | Admin | 支持最多15个用户，用户名长度1-16字符 |\n| `User set password {User id} {password}` | `{User id}`：用户ID（1-15）<br>`{password}`：密码（8-20字符，含大小写字母、数字、特殊字符） | 设置服务器 (Server)管理系统指定用户的密码 | Admin | 密码需满足复杂度要求，长度8-20字符 |\n| `User test {User id} {16 | 20} {password}` | `{User id}`：用户ID（1-15）<br>`{16 | 20}`：密码长度（16或20字符）<br>`{password}`：待验证密码 | 验证用户名密码的正确性 | Admin | 用于测试用户认证功能 |\n| `User disable {User id}` | `{User id}`：用户ID（1-15） | 关闭指定用户的服务器 (Server)管理系统访问权限 | Admin | 用户被禁用后无法登录管理界面 |\n| `User enable {User id}` | `{User id}`：用户ID（1-15） | 开启指定用户的服务器 (Server)管理系统访问权限 | Admin | 恢复被禁用用户的管理权限 |\n| `User priv {User id} {privilege level}` | `{User id}`：用户ID（1-15）<br>`{privilege level}`：权限等级（admin/operator/user） | 设置指定用户的服务器 (Server)管理系统访问权限 | Admin | 权限等级：admin（管理员）、operator（操作员）、user（普通用户） |\n\n## 机箱自检命令（chassis selftest）\n\n| 项目 | 说明 |\n|------|------|\n| **命令描述** | `chassis selftest` 命令用于获取服务器 (Server)系统自检结果 |\n| **权限级别** | user |\n| **命令示例** | ```bash<br>lenovo:~# ipmitool -H [BMC_IP] -U USERID -P PASSW0RD -I lanplus chassis selftest<br>Self Test Results : passed<br>``` |\n\n> **说明**：  \n> - 执行自检后返回结果包括 `passed`（通过）或 `failed`（失败）  \n> - 若自检失败，需结合日志进一步排查硬件故障  \n> - 建议在系统启动后或维护期间定期执行自检\n\n## 电源恢复策略设置（chassis policy always-on/previous/always-off）\n\n| 项目 | 说明 |\n|------|------|\n| **命令描述** | `chassis policy` 命令用于设置服务器 (Server)系统电源 (Power Supply)恢复策略。支持以下三种策略：<br>1. **always-on**：当服务器 (Server)电源 (Power Supply)接通后，系统自动启动<br>2. **previous**：当服务器 (Server)电源 (Power Supply)接通后，系统恢复断电前的运行状态<br>3. **always-off**：当服务器 (Server)电源 (Power Supply)接通后，系统保持关机状态 |\n| **权限级别** | operator |\n| **命令示例** | ```bash<br>-H [BMC_IP] -U USERID -P PASSW0RD -I lanplus<br>lenovo:~# ipmitool chassis policy state <state><br>```<br><br>**参数说明**：<br>- `<state>`：可选值为 `always-on`、`previous`、`always-off`<br>- `list`：查询当前支持的电源恢复策略列表 |\n\n> **注意事项**：<br>\n> - 该策略在电源恢复后立即生效<br>\n> - 推荐在高可用场景下使用 `previous` 策略以保障业务连续性<br>\n> - `always-on` 策略适用于需要快速恢复服务的环境<br>\n> - `always-off` 策略适用于安全要求较高的生产环境，防止意外启动\n\n [BMC_IP] -U USERID -P PASSW0RD -I lanplus chassis policy state list` |\n\n> **说明**：`list` 参数用于返回当前支持的电源恢复策略列表。\n\n---\n\n## 启动设备设置（chassis bootdev）\n\n`chassis bootdev` 命令用于设置服务器（Server）系统的**一次性启动设备**（One-time Boot Device）。\n\n| **权限级别** | operator |\n|--------------|----------|\n| **命令示例** | `ipmitool -H [BMC_IP] -U USERID -P PASSW0RD -I lanplus chassis bootdev [device] [options]`<br>其中 `[device]` 可选值包括：`pxe`, `disk`, `cdrom`, `bios`, `uefi` 等 |\n\n> **说明**：该命令适用于临时更改启动顺序，重启后恢复默认设置。\n\n---\n\n## SOL 功能激活（sol activate）\n\n`sol activate` 命令用于激活 **串行过 LAN（Serial Over LAN, SOL）** 功能，实现通过网络远程访问服务器（Server）的串行控制台。\n\n| **权限级别** | administrator |\n|--------------|---------------|\n| **命令示例** | `ipmitool -H [BMC_IP] -U USERID -P PASSW0RD -I lanplus sol activate`<br>`ipmitool -H [BMC_IP] -U USERID -P PASSW0RD -I lanplus sol activate usesolkeepalive` |\n\n> **输出示例**：<br>`[SOL Session operational. Use ~? for help]`  \n> **提示**：激活后，可通过 `~?` 查看 SOL 会话操作帮助。\n\n---\n\n## SOL 功能关闭（sol deactivate）\n\n`sol deactivate` 命令用于关闭 **串行过 LAN（SOL）** 功能。\n\n| **权限级别** | administrator |\n|--------------|---------------|\n| **命令示例** | `ipmitool -H [BMC_IP] -U USERID -P PASSW0RD -I lanplus sol deactivate` |\n\n> **说明**：执行后，SOL 会话将终止，远程串行控制台连接断开。\n\n---\n\n## Lenovo BMC 支持的 OEM RAW 命令\n\n以下为 Lenovo BMC 支持的 OEM（专有）RAW 命令，适用于高级管理与定制化操作：\n\n- `lenovo:~# ipmitool -H [BMC_IP] -U USERID -P PASSW0RD -I lanplus raw 0x30 0x01`  \n  （示例：获取系统状态信息）\n  \n- `lenovo:~# ipmitool -H [BMC_IP] -U USERID -P PASSW0RD -I lanplus raw 0x30 0x02 [data]`  \n  （示例：设置系统参数）\n\n> **注意**：OEM RAW 命令需根据具体型号（如 联想问天 WenTian、天擎 ThinkSystem、至强 Xeon 等）查阅官方文档，确保命令兼容性与参数正确性。\n\nate usesolkeepalive<br>[SOL Session operational. Use ~? for help]<br>``` |\n\n## sol deactivate（关闭 SOL 功能）\n\n| 项目 | 说明 |\n|------|------|\n| 命令描述 | `sol deactivate` 命令用于关闭 SOL（Serial Over LAN）功能 |\n| 权限要求 | administrator |\n| 命令示例 | ```bash<br>lenovo:~# ipmitool -H [BMC_IP] -U USERID -P PASSW0RD -I lanplus sol deactivate<br>``` |\n\n---\n\n## Lenovo BMC 支持的 OEM RAW 命令\n\n### Get SNMP Trap Info（获取 SNMP Trap 信息）\n\n| 命令 | `netfn=0x30`, `cmd=0x02` |\n|------|--------------------------|\n\n#### 请求数据（Request Data）\n\n| 字节 | 数据字段 |\n|------|----------|\n| 1 | 用户 ID，取值范围：01h 至 05h |\n| 2 | 参数类型：<br>01h - 启用状态<br>02h - 严重级别<br>03h - 版本<br>04h - 模式<br>05h - 团体名（community）<br>06h - 用户名<br>07h - 用户加密状态<br>08h - 密码<br>09h - 密码加密状态<br>0Ah - 目标 IP 地址<br>0Bh - 端口<br>0Ch - LAN 通道<br>0Dh - Enter ID |\n\n#### 响应数据（Response Data）\n\n| 参数 | 字节 | 数据字段 |\n|------|------|----------|\n| 01h（启用状态） | 1 | 完成码<br>2 | 00h - 禁用<br>&nbsp;&nbsp;&nbsp;&nbsp;01h - 启用 |\n| 02h（严重级别） | 1 | 完成码<br>2 | 01h - 严重<br>&nbsp;&nbsp;&nbsp;&nbsp;02h - 严重 + 警告<br>&nbsp;&nbsp;&nbsp;&nbsp;03h - 所有级别 |\n| 03h（版本） | 1 | 完成码<br>2 | 01h - v1<br>&nbsp;&nbsp;&nbsp;&nbsp;02h - v2c<br>&nbsp;&nbsp;&nbsp;&nbsp;03h - v3 |\n| 04h（模式） | 1 | 完成码<br>2 | 模式值（具体含义依配置而定） |\n| 05h（团体名） | 1 | 完成码<br>2:17 | 团体名字符串（ASCII） |\n| 06h（用户名） | 1 | 完成码<br>2:17 | 用户名字符串（ASCII） |\n| 07h（用户加密状态） | 1 | 完成码<br>2 | 00h - 用户加密<br>&nbsp;&nbsp;&nbsp;&nbsp;01h - 用户非加密 |\n| 08h（密码） | 1 | 完成码<br>2:17 | 密码字符串（ASCII） |\n| 09h（密码加密状态） | 1 | 完成码<br>2 | 00h - 密码加密<br>&nbsp;&nbsp;&nbsp;&nbsp;01h - 密码非加密 |\n| 0Ah（目标 IP 地址） | 1 | 完成码<br>2:33 | 目标 IP 地址（IPv4 格式） |\n| 0Bh（端口） | 1 | 完成码<br>2:3 | 端口号（16 位整数） |\n| 0Ch（LAN 通道） | 1 | 完成码<br>2 | LAN 通道编号（0-3） |\n| 0Dh（Enter ID） | 1 | 完成码<br>2:33 | Enter ID 字符串（ASCII） |\n\n#### 命令示例\n\n```bash\n# ipmitool -H 10.109.107.160 -U USERID -P PASSW0RD raw 0x30 0x02 01h 01h\n```\n\n```markdown\n## IPMI 命令参数说明\n\n### 获取 SNMP Trap 信息（Get SNMP Trap Info）\n| 参数 | 字节位置 | 数据字段 |\n|------|----------|----------|\n| for parameter 0Ah | 2:33 | 目标 IP 地址 |\n| Response Data | 1 | 完成代码 |\n| for parameter 0Bh | 2:3 | 端口 |\n| for parameter 0Ch | 2 | LAN 通道 |\n\n---\n\n### 设置 SNMP Trap 信息（Set SNMP Trap Info）\n| 命令 | `netfn=0x30`, `cmd=0x03` |\n|------|---------------------------|\n\n| 字节 | 数据字段 |\n|------|----------|\n| Request Data | 1 | 用户 ID（取值范围：01h 至 05h） |\n| Request Data | 2 | 参数定义：<br>01h - 启用<br>02h - 严重级别<br>03h - 版本<br>04h - 模式<br>05h - 团体名（Community）<br>06h - 用户名<br>07h - 用户加密<br>08h - 密码<br>09h - 密码加密<br>0Ah - 目标 IP 地址<br>0Bh - 端口<br>0Ch - LAN 通道<br>0Dh - 进入 ID |\n| Request Data | 3 | 参数 01h 的取值：<br>00h - 禁用<br>01h - 启用<br><br>参数 02h 的取值：<br>01h - 严重（Critical）<br>02h - 严重和警告（Critical & Warning）<br>03h - 所有（All）<br><br>参数 03h 的取值：\n```', 'final_quality_score': 95.47891669523483, 'original_length': 14585, 'final_length': 8599, 'chinese_chars_final': 1709, 'technical_terms_final': 49, 'basic_quality': 90.0, 'enhancement_used': True, 'enhancement_quality': 0.8, 'vllm_chunks_processed': 5, 'total_processing_time': 0.037256479263305664, 'ready_for_stage3': True}
[2025-10-15T17:19:18.326+0000] {taskinstance.py:1138} INFO - Marking task as SUCCESS. dag_id=content_transformation, task_id=finalize_transformation_results, execution_date=20251015T171842, start_date=20251015T171918, end_date=20251015T171918
[2025-10-15T17:19:18.365+0000] {local_task_job_runner.py:234} INFO - Task exited with return code 0
[2025-10-15T17:19:18.388+0000] {taskinstance.py:3280} INFO - 1 downstream tasks scheduled from follow-on schedule check
